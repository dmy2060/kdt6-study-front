<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>file_upload</title>
    <!-- axios cdn -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
      .profile {
        width: 200px;
        height: 200px;
        border-radius: 50%;
        box-shadow: 0 0 20px #000;
        /* 
          x축 offset, y축 offset, 그림자 크기, 그림자 색상 
          #0002 (축약 버전) => #00000020 (앞에 여섯개 숫자, 뒤에는 투명도 조정)
        */
        object-fit: cover;
      }
    </style>
  </head>
  <body>
    <h1>파일 업로드 배워보자!!</h1>
    <!-- 주의) multer는 multipart가 아닌 폼에서는 동작하지 않음!! -->
    <h2>하나의 input에 하나의 파일 업로드</h2>
    <form action="/upload" method="POST" enctype="multipart/form-data">
      <input type="file" name="userfile" /><br />
      <input type="text" name="title" /><br />
      <button type="submit">업로드</button>
    </form>

    <h2>하나의 input에 여러개 파일 업로드</h2>
    <form action="/upload/array" method="POST" enctype="multipart/form-data">
      <!-- input type이 file일 때 multiple 속성을 추가하면 여러개 업로드 가능! -->
      <input type="file" name="userfile" multiple /><br />
      <input type="text" name="title" /><br />
      <button type="submit">업로드</button>
    </form>

    <h2>여러 input에 각각 파일 업로드</h2>
    <form action="/upload/fields" method="POST" enctype="multipart/form-data">
      <!-- input type이 file일 때 multiple 속성을 추가하면 여러개 업로드 가능! -->
      <input type="file" name="userfile1" /><br />
      <input type="text" name="title1" /><br />
      <input type="file" name="userfile2" /><br />
      <input type="text" name="title2" /><br />
      <button type="submit">업로드</button>
    </form>

    <h2>동적 파일 업로드</h2>
    <p>페이지 변환하지 않고, 현재 페이지에서 파일 업로드 결과 확인하기~!</p>
    <input type="file" name="dynamic-userfile" id="dynamic-file" /><br />
    <button type="button" onclick="fileUpload()">업로드</button>
    <!-- 업로드할 파일을 보여줄 이미지 태그 -->
    <br /><br /><img src="" />
  </body>
  <script>
    function fileUpload() {
      console.log("click upload btn!!!");
      const formData = new FormData();
      // FormData란?
      // form 태그의 데이터를 동적으로 제어할 수 있는 기능, 보통 axios/ajax... 함께 사용함
      // 페이지 전환 없이 '현재 페이지'에서 동적으로 파일 업로드하고 싶을 때 사용함
      const fileInput = document.getElementById("dynamic-file"); // querySelector('#dynamic-file')
      console.dir(fileInput);
      console.log(fileInput.files);
      console.log(fileInput.files[0]);

      // formData.append(key, value)
      // inpur의 name 값이 'dynamic-userfile'인 요소에 fileInput.files[0] 데이터가 입력되었음.
      formData.append("dynamic-userfile", fileInput.files[0]);

      axios({
        url: "/dynamicFile",
        method: "POST",
        data: formData,
        headers: {
          "Content-Type": "multipart/form-date",
          // enctype="multipart/form-data"
          // form이 없으나 form 처럼 동작할 수 있게 headers에서 지정해줘야함
          // multipart/form-date는 꼭 지정해야 사용이 가능
        },
      }).then((response) => {
        console.log(response);
        document.querySelector("img").src = `/${response.data.path}`;
        document.querySelector("img").classList.add("profile");
      });
    }
  </script>
</html>
